MODULES := src \
	src/common \
	src/hal/ESP8266 \
	src/hal/ESP8266/ESP8266_RTOS_SDK

ROOT := $(patsubst %/,%,$(dir $(lastword $(MAKEFILE_LIST))))

BUILDDIR := $(ROOT)/build
OBJDIR := $(BUILDDIR)/obj$(patsubst $(abspath $(ROOT))%,%,$(CURDIR))
BINDIR := $(BUILDDIR)/bin

ELF := $(BINDIR)/$(notdir $(CURDIR)).elf
BIN := $(BINDIR)/$(notdir $(CURDIR)).bin
MAP := $(BUILDDIR)/$(notdir $(CURDIR)).map
LSS := $(BUILDDIR)/$(notdir $(CURDIR)).lss

GLOBAL_INC := $(ROOT)/src \
	$(ROOT)/src/hal/ESP8266 \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/esp8266/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/freertos/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/freertos/include/freertos \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/freertos/include/freertos/private \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/freertos/port/esp8266/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/freertos/port/esp8266/include/freertos \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/heap/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/heap/port/esp8266/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/lwip/lwip/src/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/lwip/port/esp8266/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/tcpip_adapter/include \
	$(ROOT)/src/hal/ESP8266/ESP8266_RTOS_SDK/components/lwip/include/lwip/apps

GLOBAL_DEF :=

GLOBAL_C_CPP_FLAGS := -O0 -g3 \
	-Wall \
	-ffunction-sections \
	-fdata-sections \
	-mlongcalls \
	-mtext-section-literals

GLOBAL_CFLAGS := -std=c99

GLOBAL_CPPFLAGS := -std=c++11 \
	-fno-exceptions \
	-fno-rtti \
	-felide-constructors \
	-fno-threadsafe-statics \
	-fno-use-cxa-atexit

GLOBAL_AFLAGS := -g3

LDFLAGS := -Tsrc/hal/ESP8266/ESP8266_RTOS_SDK/components/esp8266/ld/esp8266.peripherals.ld \
	-Tsrc/hal/ESP8266/ESP8266_RTOS_SDK/components/esp8266/ld/esp8266.rom.ld \
	-Tsrc/hal/ESP8266/ESP8266_RTOS_SDK/components/esptool_py/esptool/flasher_stub/rom_8266.ld \
	-Tsrc/hal/ESP8266/ESP8266_RTOS_SDK/components/esp8266/ld/esp8266.ld \
	-Tsrc/hal/ESP8266/ESP8266_RTOS_SDK/components/esp8266/ld/esp8266.common.ld \
	\
	-nostdlib \
	-u call_user_start \
	-Wl,--no-check-sections \
	-Wl,--Map="$(MAP)",--cref

CC := xtensa-lx106-elf-gcc-5.2.0
CPP := xtensa-lx106-elf-gcc-5.2.0
AS := xtensa-lx106-elf-gcc-5.2.0
LD := xtensa-lx106-elf-gcc-5.2.0
OBJCOPY := xtensa-lx106-elf-objcopy
OBJDUMP := xtensa-lx106-elf-objdump
SIZE := xtensa-lx106-elf-size

FLASHER := esptool

ESPTOOL_PARAM := --chip esp8266 --port COM6 --baud 512000 --before default_reset --after hard_reset

ifeq ($(OS),Windows_NT)

define MKDIR
@if not exist "$(1)" mkdir "$(1)"
endef
define RMDIR
@if exist "$(1)" rmdir /s /q "$(1)"
endef
define RM
@del /q "$(1)" 2>nul
endef

else

define MKDIR
@mkdir -p "$(1)"
endef
define RMDIR
@rm -rf "$(1)"
endef
define RM
@rm -f "$(1)"
endef

endif
